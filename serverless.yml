service: aws-nodejs


provider:
  name: aws
  runtime: nodejs6.10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:*:*"


functions:
# --- SERVICE FUNCTIONS --- #
  services_post:
    handler: functions/services.post
    events:
      - http:
          path: services
          method: post
          cors: true

  services_get:
    handler: functions/services.list
    events:
      - http:
          path: services
          method: get
          cors: true

  services_get_instance:
    handler: functions/services.get
    events:
      - http:
          path: services/{id}
          method: get
          cors: true

  services_put:
    handler: functions/services.put
    events:
      - http:
          path: services/{id}
          method: put
          cors: true

  services_patch:
    handler: functions/services.patch
    events:
      - http:
          path: services/{id}
          method: patch
          cors: true

  services_delete:
    handler: functions/services.delete
    events:
      - http:
          path: services/{id}
          method: delete
          cors: true

# --- PROJECT FUNCITONS --- #
  projects_post:
    handler: functions/projects.post
    events:
      - http:
          path: projects
          method: post
          cors: true

  projects_get:
    handler: functions/projects.list
    events:
      - http:
          path: projects
          method: get
          cors: true

  projects_get_instance:
    handler: functions/projects.get
    events:
      - http:
          path: projects/{id}
          method: get
          cors: true

  projects_put:
    handler: functions/projects.put
    events:
      - http:
          path: projects/{id}
          method: put
          cors: true

  projects_patch:
    handler: functions/projects.patch
    events:
      - http:
          path: projects/{id}
          method: patch
          cors: true

  projects_delete:
    handler: functions/projects.delete
    events:
      - http:
          path: projects/{id}
          method: delete
          cors: true

# --- TEAM_MEMBER FUNCTIONS --- #
  team_members_post:
    handler: functions/team_members.post
    events:
      - http:
          path: team_members
          method: post
          cors: true

  team_members_get:
    handler: functions/team_members.list
    events:
      - http:
          path: team_members
          method: get
          cors: true

  team_members_get_instance:
    handler: functions/team_members.get
    events:
      - http:
          path: team_members/{id}
          method: get
          cors: true

  team_members_put:
    handler: functions/team_members.put
    events:
      - http:
          path: team_members/{id}
          method: put
          cors: true

  team_members_patch:
    handler: functions/team_members.patch
    events:
      - http:
          path: team_members/{id}
          method: patch
          cors: true

  team_members_delete:
    handler: functions/team_members.delete
    events:
      - http:
          path: team_members/{id}
          method: delete
          cors: true

# --- CLIENT FUNCITONS --- #
  clients_post:
    handler: functions/clients.post
    events:
      - http:
          path: clients
          method: post
          cors: true

  clients_get:
    handler: functions/clients.list
    events:
      - http:
          path: clients
          method: get
          cors: true

  clients_get_instance:
    handler: functions/clients.get
    events:
      - http:
          path: clients/{id}
          method: get
          cors: true

  clients_put:
    handler: functions/clients.put
    events:
      - http:
          path: clients/{id}
          method: put
          cors: true

  clients_patch:
    handler: functions/clients.patch
    events:
      - http:
          path: clients/{id}
          method: patch
          cors: true

  clients_delete:
    handler: functions/clients.delete
    events:
      - http:
          path: clients/{id}
          method: delete
          cors: true

# --- CONTRACT VEHICLE FUNCITONS --- #
  contract_vehicles_post:
    handler: functions/contract_vehicles.post
    events:
      - http:
          path: contract_vehicles
          method: post
          cors: true

  contract_vehicles_get:
    handler: functions/contract_vehicles.list
    events:
      - http:
          path: contract_vehicles
          method: get
          cors: true

  contract_vehicles_get_instance:
    handler: functions/contract_vehicles.get
    events:
      - http:
          path: contract_vehicles/{id}
          method: get
          cors: true

  contract_vehicles_put:
    handler: functions/contract_vehicles.put
    events:
      - http:
          path: contract_vehicles/{id}
          method: put
          cors: true

  contract_vehicles_patch:
    handler: functions/contract_vehicles.patch
    events:
      - http:
          path: contract_vehicles/{id}
          method: patch
          cors: true

  contract_vehicles_delete:
    handler: functions/contract_vehicles.delete
    events:
      - http:
          path: contract_vehicles/{id}
          method: delete
          cors: true

# --- PARTNER FUNCITONS --- #
  partners_post:
    handler: functions/partners.post
    events:
      - http:
          path: partners
          method: post
          cors: true

  partners_get:
    handler: functions/partners.list
    events:
      - http:
          path: partners
          method: get
          cors: true

  partners_get_instance:
    handler: functions/partners.get
    events:
      - http:
          path: partners/{id}
          method: get
          cors: true

  partners_put:
    handler: functions/partners.put
    events:
      - http:
          path: partners/{id}
          method: put
          cors: true

  partners_patch:
    handler: functions/partners.patch
    events:
      - http:
          path: partners/{id}
          method: patch
          cors: true

  partners_delete:
    handler: functions/partners.delete
    events:
      - http:
          path: partners/{id}
          method: delete
          cors: true



resources:
  Resources:
    Services:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType:  N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: Services

    Projects:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: Projects

    TeamMembers:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: TeamMembers

    Clients:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: Clients

    ContractVehicles:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ContractVehicles

    Partners:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: Partners
